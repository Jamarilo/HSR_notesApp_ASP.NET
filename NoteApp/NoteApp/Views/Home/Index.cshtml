@model NoteApp.ViewModels.NoteViewModel

@{
    ViewData["Title"] = "Home Page";
}

<style>
    .note {
        border-style: solid;
        border-width: 1px;
        padding-bottom: 6px;
        margin-bottom: 20px;
    }
    .headerbottons {
        margin-bottom: 1.5em;
    }
</style>

@*Ich glaube mit asp-action="Index" kann man mit "Index" sagen das diese View aufgerufen werden soll *@
<div class="container">
    <div class="row headerbottons">
        @*Diese col-md-8 und so, teilen eine Row auf. Siehe http://holdirbootstrap.de/examples/grid/ und https://getbootstrap.com/docs/3.3/css/#grid*@
        <a class="btn btn-primary col-md-2 col-xs-4" asp-action="Create">Create New</a>
        <a class="btn btn-primary col-md-2 col-xs-4 pull-right">Change Style</a>
    </div>

    <div class="row">
        <a class="btn btn-primary col-md-2 col-xs-12" asp-action="Index" asp-route-sortOrder="finish_desc">By Finish Date</a>
        <a class="btn btn-primary col-md-2 col-xs-12" asp-action="Index" asp-route-sortOrder="created_desc">By Created Date</a>
        <a class="btn btn-primary col-md-2 col-xs-12" asp-action="Index" asp-route-sortOrder="importance_desc">By Importance</a>
        <a class="btn btn-primary col-md-2 col-xs-12 pull-right" asp-action="Index" asp-route-hideFinished="false">Show Finished</a>
        @*@if ((bool)ViewData["HideSetting"])
        {
            <a class="btn btn-primary col-md-2 col-xs-12 pull-right" asp-action="Index" asp-route-hideFinished="false">Show Finished</a>
        }
        else
        {
            <a class="btn btn-primary col-md-2 col-xs-12 pull-right" asp-action="Index" asp-route-hideFinished="true">Hide Finished</a>
        }*@

    </div>
    </div>

    <br><br>
    @foreach (var item in Model.notes)
    {
        <div class="container note">
            <div class="row">
                <span class="col-md-1 col-xs-2">@Html.DisplayFor(modelItem => item.FinishDate)</span>
                <span class="col-md-8 col-xs-8">
                    <span>@Html.DisplayFor(modelItem => item.Title)</span>
                    <span class="rating pull-right">
                        <starrating disablecheck="true" rating="@item.Importance" itemid="@item.ID"></starrating>
                    </span>
                </span>
            </div>
            <div class="row" >
                <span class="col-md-1 col-xs-2">
                    @if (item.Finished)
                    {
                    <label class="checkbox-inline">
                        <input type="checkbox" checked="checked">Finish
                    </label>
                    }
                    else
                    {
                        <label class="checkbox-inline">
                            <input type="checkbox" >Not Finish
                        </label>
                    }
                </span>
                @*Edit Button der Textare angleichen. Textare disablen*@
                <textarea disabled class="col-md-8 col-xs-8">@Html.DisplayFor(modelItem => item.Text)</textarea>
                <a asp-action="Edit" class="btn btn-primary col-md-3 col-xs-3 test" asp-route-id="@item.ID">Edit</a>
            </div>
        </div>
    }
